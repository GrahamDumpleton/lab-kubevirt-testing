apiVersion: training.educates.dev/v1beta1
kind: Workshop
metadata:
  name: "lab-kubevirt-testing"
spec:
  title: "Workshop"
  description: "Workshop description."
  workshop:
    files:
    - image:
        url: "$(image_repository)/lab-kubevirt-testing-files:latest"
      includePaths:
      - /workshop/**
      - /exercises/**
      - /README.md
      - .ssh/**
  session:
    namespaces:
      budget: x-large
      limits:
        max:
          memory: 2.5Gi
    applications:
      terminal:
        enabled: true
        layout: split/2
      editor:
        enabled: true
      console:
        enabled: false
      docker:
        enabled: false
      registry:
        enabled: false
      vcluster:
        enabled: false
      examiner:
        enabled: true
    objects:
    - apiVersion: cdi.kubevirt.io/v1beta1
      kind: DataVolume
      metadata:
        name: master
      spec:
        source:
          pvc:
            namespace: $(workshop_namespace)
            name: fedora-37
        pvc:
          accessModes:
            - ReadWriteOnce
          resources:
            requests:
              storage: 10Gi
    - apiVersion: cdi.kubevirt.io/v1beta1
      kind: DataVolume
      metadata:
        name: node01
      spec:
        source:
          pvc:
            namespace: $(workshop_namespace)
            name: fedora-37
        pvc:
          accessModes:
            - ReadWriteOnce
          resources:
            requests:
              storage: 10Gi
    - apiVersion: cdi.kubevirt.io/v1beta1
      kind: DataVolume
      metadata:
        name: node02
      spec:
        source:
          pvc:
            namespace: $(workshop_namespace)
            name: fedora-37
        pvc:
          accessModes:
            - ReadWriteOnce
          resources:
            requests:
              storage: 10Gi
    - apiVersion: rbac.authorization.k8s.io/v1
      kind: Role
      metadata:
        name: vmi-viewer
      rules:
      - apiGroups:
        - kubevirt.io
        resources:
        - virtualmachines
        - virtualmachineinstances
        verbs:
        - get
        - list
        - watch
      - apiGroups:
        - subresources.kubevirt.io
        resources:
        - virtualmachineinstances/console
        - virtualmachineinstances/filesystemlist
        - virtualmachineinstances/userlist
        verbs:
        - get
      - apiGroups:
        - subresources.kubevirt.io
        resources:
        - virtualmachines/restart
        verbs:
        - update
      - apiGroups:
        - subresources.kubevirt.io
        resources:
        - virtualmachineinstances/softreboot
        verbs:
        - update
    - apiVersion: rbac.authorization.k8s.io/v1
      kind: RoleBinding
      metadata:
        name: vmi-viewer
      roleRef:
        apiGroup: rbac.authorization.k8s.io
        kind: Role
        name: vmi-viewer
      subjects:
      - kind: ServiceAccount
        namespace: $(workshop_namespace)
        name: $(service_account)
    - apiVersion: rbac.authorization.k8s.io/v1
      kind: RoleBinding
      metadata:
        name: $(session_namespace)-datavolume-clone
        namespace: $(workshop_namespace)
      roleRef:
        apiGroup: rbac.authorization.k8s.io
        kind: Role
        name: datavolume-clone
      subjects:
      - kind: ServiceAccount
        namespace: $(workshop_namespace)
        name: $(service_account)
    - apiVersion: secrets.educates.dev/v1beta1
      kind: SecretCopier
      metadata:
        name: $(session_namespace)-ssh-keys
      spec:
        rules:
        - sourceSecret:
            name: $(ssh_keys_secret)
            namespace: $(workshop_namespace)
          targetNamespaces:
            nameSelector:
              matchNames:
              - $(session_namespace)
          targetSecret:
            name: ssh-keys
    - apiVersion: kubevirt.io/v1
      kind: VirtualMachine
      metadata:
        name: master
        labels:
          kubevirt.io/vm: master
      spec:
        running: true
        template:
          metadata:
            labels:
              kubevirt.io/vm: master
          spec:
            terminationGracePeriodSeconds: 30
            accessCredentials:
            - sshPublicKey:
                source:
                  secret:
                    secretName: ssh-keys
                propagationMethod:
                  configDrive: {}
            domain:
              cpu:
                cores: 2
              resources:
                limits:
                  memory: 2Gi
                requests:
                  memory: 2Gi
              devices:
                disks:
                - name: disk1
                  disk:
                    bus: virtio
                - disk:
                    bus: virtio
                  name: cloudinitdisk
                interfaces:
                - name: default
                  masquerade: {}
            networks:
            - name: default
              pod: {}
            volumes:
            - name: disk1
              dataVolume:
                name: master
            - name: cloudinitdisk
              cloudInitConfigDrive:
                userData: |-
                  #cloud-config
                  password: $(services_password)
                  chpasswd:
                    expire: false
                  runcmd:
                  - echo "set enable-bracketed-paste off" >> /etc/inputrc
    - apiVersion: v1
      kind: Service
      metadata:
        name: master
      spec:
        selector:
          kubevirt.io/vm: master
        ports:
          - name: ssh
            protocol: TCP
            port: 22
            targetPort: 22
          - name: kube-apiserver
            protocol: TCP
            port: 6443
            targetPort: 6443
          - name: http
            protocol: TCP
            port: 80
            targetPort: 80
          - name: https
            protocol: TCP
            port: 443
            targetPort: 443
    - apiVersion: kubevirt.io/v1
      kind: VirtualMachine
      metadata:
        name: node01
        labels:
          kubevirt.io/vm: node01
      spec:
        running: true
        template:
          metadata:
            labels:
              kubevirt.io/vm: node01
          spec:
            terminationGracePeriodSeconds: 30
            accessCredentials:
            - sshPublicKey:
                source:
                  secret:
                    secretName: ssh-keys
                propagationMethod:
                  configDrive: {}
            domain:
              cpu:
                cores: 2
              resources:
                limits:
                  memory: 2Gi
                requests:
                  memory: 2Gi
              devices:
                disks:
                - name: disk1
                  disk:
                    bus: virtio
                - disk:
                    bus: virtio
                  name: cloudinitdisk
                interfaces:
                - name: default
                  masquerade: {}
            networks:
            - name: default
              pod: {}
            volumes:
            - name: disk1
              dataVolume:
                name: node01
            - name: cloudinitdisk
              cloudInitConfigDrive:
                userData: |-
                  #cloud-config
                  password: $(services_password)
                  chpasswd:
                    expire: false
                  runcmd:
                  - echo "set enable-bracketed-paste off" >> /etc/inputrc
    - apiVersion: v1
      kind: Service
      metadata:
        name: node01
      spec:
        selector:
          kubevirt.io/vm: node01
        ports:
          - name: ssh
            protocol: TCP
            port: 22
            targetPort: 22
          - name: kube-apiserver
            protocol: TCP
            port: 6443
            targetPort: 6443
          - name: http
            protocol: TCP
            port: 80
            targetPort: 80
          - name: https
            protocol: TCP
            port: 443
            targetPort: 443
    - apiVersion: kubevirt.io/v1
      kind: VirtualMachine
      metadata:
        name: node02
        labels:
          kubevirt.io/vm: node02
      spec:
        running: true
        template:
          metadata:
            labels:
              kubevirt.io/vm: node02
          spec:
            terminationGracePeriodSeconds: 30
            accessCredentials:
            - sshPublicKey:
                source:
                  secret:
                    secretName: ssh-keys
                propagationMethod:
                  configDrive: {}
            domain:
              cpu:
                cores: 2
              resources:
                limits:
                  memory: 2Gi
                requests:
                  memory: 2Gi
              devices:
                disks:
                - name: disk1
                  disk:
                    bus: virtio
                - disk:
                    bus: virtio
                  name: cloudinitdisk
                interfaces:
                - name: default
                  masquerade: {}
            networks:
            - name: default
              pod: {}
            volumes:
            - name: disk1
              dataVolume:
                name: node02
            - name: cloudinitdisk
              cloudInitConfigDrive:
                userData: |-
                  #cloud-config
                  password: $(services_password)
                  chpasswd:
                    expire: false
                  runcmd:
                  - echo "set enable-bracketed-paste off" >> /etc/inputrc
    - apiVersion: v1
      kind: Service
      metadata:
        name: node02
      spec:
        selector:
          kubevirt.io/vm: node02
        ports:
          - name: ssh
            protocol: TCP
            port: 22
            targetPort: 22
          - name: kube-apiserver
            protocol: TCP
            port: 6443
            targetPort: 6443
          - name: http
            protocol: TCP
            port: 80
            targetPort: 80
          - name: https
            protocol: TCP
            port: 443
            targetPort: 443
  environment:
    objects:
    - apiVersion: rbac.authorization.k8s.io/v1
      kind: Role
      metadata:
        name: datavolume-clone
      rules:
      - apiGroups:
        - kubevirt.io
        resources:
        - datavolume/source
        verbs:
        - get
    - apiVersion: cdi.kubevirt.io/v1beta1
      kind: DataVolume
      metadata:
        name: fedora-37
      spec:
        source:
          registry:
            url: "docker://quay.io/containerdisks/fedora:37"
        pvc:
          accessModes:
            - ReadWriteOnce
          resources:
            requests:
              storage: 10Gi
